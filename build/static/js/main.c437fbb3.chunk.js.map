{"version":3,"sources":["components/TransactionsList.js","components/Search.js","components/AddTransactionForm.js","components/AccountContainer.js","components/App.js","index.js"],"names":["TransactionsList","_ref","transactions","onDelete","onSort","handleSort","sortBy","_jsxs","className","children","_jsx","onClick","map","transaction","date","description","category","amount","handleDelete","id","Search","handleSearch","type","placeholder","onChange","AddTransactionForm","setDate","useState","setDescription","setCategory","setAmount","onSubmit","e","fetch","method","headers","body","JSON","stringify","alert","value","target","name","step","AccountContainer","setTransactions","query","setQuery","useEffect","then","resp","json","data","concat","ok","Error","updatedTransactions","filter","catch","error","console","sortedTransactions","sort","a","b","fieldValueA","toLowerCase","fieldValueB","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c437fbb3.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TransactionsList({ transactions, onDelete, onSort }) {\n\n  const handleSort = (sortBy) => {\n    onSort(sortBy);\n  };\n\n  const handleDelete = (id) => {\n    onDelete(id);\n  };\n\n  return (\n    <table className=\"ui celled striped padded table\">\n      <thead>\n        <tr>\n          <th>\n            <button className=\"btn\" onClick={() => handleSort(\"date\")}>Date</button>\n          </th>\n          <th>\n            <button className=\"btn\" onClick={() => handleSort(\"description\")}>Description</button>\n          </th>\n          <th>\n            <button className=\"btn\" onClick={() => handleSort(\"category\")}>Category</button>\n          </th>\n          <th>\n            <h3 className=\"btn\" >Amount</h3>\n          </th>\n          <th><h3>Delete</h3></th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions && transactions.map((transaction) => (\n          <tr key={transaction.id}>\n            <td>{transaction.date}</td>\n            <td>{transaction.description}</td>\n            <td>{transaction.category}</td>\n            <td>{transaction.amount}</td>\n            <td>\n              <button onClick={() => handleDelete(transaction.id)}>Delete</button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionsList;","import React from \"react\";\n\nfunction Search({handleSearch}) {\n  return (\n    <div className=\"ui large fluid icon input\">\n      <input\n        type=\"text\"\n        placeholder=\"Search your Recent Transactions\"\n        onChange={handleSearch}\n      />\n      <i className=\"circular search link icon\"></i>\n    </div>\n  );\n}\n\nexport default Search;","import React, { useState } from \"react\";\n// import Transaction from \"./Transaction\";\n\nfunction AddTransactionForm() {\n  const [date, setDate] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const [amount, setAmount] = useState(\"\")\n\n  function handleSubmit(e) {\n    fetch(\"http://localhost:3000/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        description: description,\n        category: category,\n        amount: amount,\n      }),\n    });\n     alert(\"Transaction added successfully\")\n  }\n  return (\n    <div className=\"ui segment\">\n      <form onSubmit={handleSubmit} className=\"ui form\">\n        <div className=\"inline fields\">\n          <input value={date} onChange={(e) => setDate(e.target.value)} type=\"date\" name=\"date\" />\n          <input value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input value={category} onChange={(e) => setCategory(e.target.value)} type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input value={amount} onChange={(e) => setAmount(e.target.value)} type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">Add Transaction</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;","import React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = useState([])\n  const [query, setQuery] = useState(\"\")\n\n  useEffect(() => {\n    fetch('http://localhost:3000/transactions?q=' + query)\n      .then((resp) => resp.json())\n      .then(data => setTransactions(data))\n  }, [query])\n\n  function handleSearch(e) {\n    setQuery(e.target.value)\n  };\n\n\n  const handleDelete = (id) => {\n    fetch(`http://localhost:3000/transactions/${id}`, {\n      method: \"DELETE\",\n    })\n    .then((resp) => {\n      if (resp.ok) {\n        const updatedTransactions = transactions.filter(transaction => transaction.id !== id);\n        setTransactions(updatedTransactions);\n      } else {\n        throw new Error(\"Failed to delete transaction\");\n      }\n    })\n    .catch((error) => console.error(\"Error deleting transaction: \", error));\n  };\n  \n  const handleSort = (sortBy) => {\n    fetch(`http://localhost:3000/transactions?sortBy=${sortBy}`)\n      .then((resp) => resp.json())\n      .then((data) => {\n        const sortedTransactions = data.sort((a, b) => {\n          const fieldValueA = a[sortBy].toLowerCase();\n          const fieldValueB = b[sortBy].toLowerCase();\n          if (fieldValueA < fieldValueB) {\n            return -1;\n          }\n          if (fieldValueA > fieldValueB) {\n            return 1;\n          }\n          return 0;\n        });\n        setTransactions(sortedTransactions);\n      })\n      .catch((error) => console.error(\"Error fetching sorted data: \", error));\n  };\n\n\n  return (\n    <div>\n      <Search handleSearch={handleSearch} />\n      <AddTransactionForm />\n      <TransactionsList \n          transactions={transactions}\n          onDelete={handleDelete}\n          onSort={handleSort}\n      />\n    </div>\n  );\n}\n\nexport default AccountContainer;","import React from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\nfunction App() {\n  return (\n    <div className=\"ui raised segment\">\n      <div className=\"ui segment violet inverted\">\n        <h2>The Royal Bank of Flatiron</h2>\n      </div>\n      <AccountContainer />\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}