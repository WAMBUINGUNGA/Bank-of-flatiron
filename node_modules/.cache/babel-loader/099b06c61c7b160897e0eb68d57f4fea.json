{"ast":null,"code":"var _jsxFileName = \"/home/alex/Development/code/se-prep/phase-2/Bank-of-Flatiron/src/components/AccountContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountContainer() {\n  _s();\n  const [transaction, setTransaction] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions?q=\" + query).then(resp => resp.json()).then(transaction => setTransaction(transaction));\n  }, [query]);\n  function handleSearch(e) {\n    setQuery(e.target.value);\n  }\n  ;\n  const handleDelete = id => {\n    fetch(`http://localhost:8001transactions/${id}`, {\n      method: \"DELETE\"\n    }).then(resp => {\n      if (resp.ok) {\n        const updatedTransactions = transactions.filter(transaction => transaction.id !== id);\n        setTransactions(updatedTransactions);\n      } else {\n        throw new Error(\"Failed to delete transaction\");\n      }\n    }).catch(error => console.error(\"Error deleting transaction: \", error));\n  };\n  const handleSort = sortBy => {\n    fetch(`http://localhost:8001/transactions?sortBy=${sortBy}`).then(resp => resp.json()).then(data => {\n      const sortedTransactions = data.sort((a, b) => {\n        const fieldValueA = a[sortBy].toLowerCase();\n        const fieldValueB = b[sortBy].toLowerCase();\n        if (fieldValueA < fieldValueB) {\n          return -1;\n        }\n        if (fieldValueA > fieldValueB) {\n          return 1;\n        }\n        return 0;\n      });\n      setTransactions(sortedTransactions);\n    }).catch(error => console.error(\"Error fetching sorted data: \", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactions: transactions,\n      onDelete: handleDelete,\n      onSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountContainer, \"TGHL9Tu/fBV0orC7qrZLUvQWd6Q=\");\n_c = AccountContainer;\nexport default AccountContainer;\nvar _c;\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"names":["React","useEffect","useState","TransactionsList","Search","AddTransactionForm","jsxDEV","_jsxDEV","AccountContainer","_s","transaction","setTransaction","query","setQuery","fetch","then","resp","json","handleSearch","e","target","value","handleDelete","id","method","ok","updatedTransactions","transactions","filter","setTransactions","Error","catch","error","console","handleSort","sortBy","data","sortedTransactions","sort","a","b","fieldValueA","toLowerCase","fieldValueB","children","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","onSort","_c","$RefreshReg$"],"sources":["/home/alex/Development/code/se-prep/phase-2/Bank-of-Flatiron/src/components/AccountContainer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transaction, setTransaction] = useState([])\n  const [query, setQuery] = useState(\"\")\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions?q=\" + query)\n      .then((resp) => resp.json())\n      .then(transaction => setTransaction(transaction))\n  }, [query])\n\n  function handleSearch(e) {\n    setQuery(e.target.value)\n  };\n\n\n  const handleDelete = (id) => {\n    fetch(`http://localhost:8001transactions/${id}`, {\n      method: \"DELETE\",\n    })\n    .then((resp) => {\n      if (resp.ok) {\n        const updatedTransactions = transactions.filter(transaction => transaction.id !== id);\n        setTransactions(updatedTransactions);\n      } else {\n        throw new Error(\"Failed to delete transaction\");\n      }\n    })\n    .catch((error) => console.error(\"Error deleting transaction: \", error));\n  };\n  \n  const handleSort = (sortBy) => {\n    fetch(`http://localhost:8001/transactions?sortBy=${sortBy}`)\n      .then((resp) => resp.json())\n      .then((data) => {\n        const sortedTransactions = data.sort((a, b) => {\n          const fieldValueA = a[sortBy].toLowerCase();\n          const fieldValueB = b[sortBy].toLowerCase();\n          if (fieldValueA < fieldValueB) {\n            return -1;\n          }\n          if (fieldValueA > fieldValueB) {\n            return 1;\n          }\n          return 0;\n        });\n        setTransactions(sortedTransactions);\n      })\n      .catch((error) => console.error(\"Error fetching sorted data: \", error));\n  };\n\n\n  return (\n    <div>\n      <Search handleSearch={handleSearch} />\n      <AddTransactionForm />\n      <TransactionsList \n          transactions={transactions}\n          onDelete={handleDelete}\n          onSort={handleSort}\n      />\n    </div>\n  );\n}\n\nexport default AccountContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}